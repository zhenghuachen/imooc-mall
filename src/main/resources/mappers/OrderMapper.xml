<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.mall.model.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.imooc.mall.model.pojo.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="total_price" jdbcType="INTEGER" property="totalPrice" />
    <result column="receiver_name" jdbcType="VARCHAR" property="receiverName" />
    <result column="receiver_mobile" jdbcType="VARCHAR" property="receiverMobile" />
    <result column="receiver_address" jdbcType="VARCHAR" property="receiverAddress" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="postage" jdbcType="INTEGER" property="postage" />
    <result column="payment_type" jdbcType="INTEGER" property="paymentType" />
    <result column="delivery_time" jdbcType="TIMESTAMP" property="deliveryTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_no, user_id, total_price, receiver_name, receiver_mobile, receiver_address, 
    order_status, postage, payment_type, delivery_time, pay_time, end_time, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from imooc_mall_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from imooc_mall_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.imooc.mall.model.pojo.Order">
    insert into imooc_mall_order (id, order_no, user_id, 
      total_price, receiver_name, receiver_mobile, 
      receiver_address, order_status, postage, 
      payment_type, delivery_time, pay_time, 
      end_time, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{totalPrice,jdbcType=INTEGER}, #{receiverName,jdbcType=VARCHAR}, #{receiverMobile,jdbcType=VARCHAR}, 
      #{receiverAddress,jdbcType=VARCHAR}, #{orderStatus,jdbcType=INTEGER}, #{postage,jdbcType=INTEGER}, 
      #{paymentType,jdbcType=INTEGER}, #{deliveryTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.imooc.mall.model.pojo.Order">
    insert into imooc_mall_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="receiverName != null">
        receiver_name,
      </if>
      <if test="receiverMobile != null">
        receiver_mobile,
      </if>
      <if test="receiverAddress != null">
        receiver_address,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="postage != null">
        postage,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="receiverName != null">
        #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null">
        #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null">
        #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="postage != null">
        #{postage,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.mall.model.pojo.Order">
    update imooc_mall_order
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="receiverName != null">
        receiver_name = #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null">
        receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null">
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="postage != null">
        postage = #{postage,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.mall.model.pojo.Order">
    update imooc_mall_order
    set order_no = #{orderNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=INTEGER},
      receiver_name = #{receiverName,jdbcType=VARCHAR},
      receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=INTEGER},
      postage = #{postage,jdbcType=INTEGER},
      payment_type = #{paymentType,jdbcType=INTEGER},
      delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByOrderNo" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List"/>
    from imooc_mall_order
    where order_no = #{orderNo}
  </select>
  <select id="selectForCustomer" resultMap="BaseResultMap" parameterType="integer">
    select
    <include refid="Base_Column_List"/>
    from imooc_mall_order
    where user_id = #{userId}
    order by create_time desc
  </select>
  <select id="selectAllForAdmin" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from imooc_mall_order
    order by create_time desc
  </select>
  <!--
    <resultMap id="listOrderStatisticsMap" type="com.imooc.mall.model.vo.OrderStatisticsVO">：
    定义了一个结果映射规则，将查询结果映射到名为listOrderStatisticsMap的resultMap中。
    id="listOrderStatisticsMap"：指定resultMap的唯一标识符。
    type="com.imooc.mall.model.vo.OrderStatisticsVO"：指定将查询结果映射到OrderStatisticsVO类型的对象中。

    <result column="days" jdbcType="TIMESTAMP" property="days"/>：
    将查询结果中名为days的列映射到Java对象的属性days上，该属性对应OrderStatisticsVO类中的属性。
    jdbcType="TIMESTAMP"：指定数据库列的数据类型。
    property="days"：指定Java对象中的属性名称。
    
    <result column="amount" jdbcType="INTEGER" property="amount"/>：
    将查询结果中名为amount的列映射到Java对象的属性amount上，该属性对应OrderStatisticsVO类中的属性。
    jdbcType="INTEGER"：指定数据库列的数据类型。
    property="amount"：指定Java对象中的属性名称。
  -->

  <resultMap id="listOrderStatisticsMap" type="com.imooc.mall.model.vo.OrderStatisticsVO">
    <result column="days" jdbcType="TIMESTAMP" property="days"/>
    <result column="amount" jdbcType="INTEGER" property="amount"/>
  </resultMap>
  <!--
    用于从名为 imooc_mall_order 的表中查询订单统计信息。接下来我将逐行对这段代码进行解释：
    <select id="selectOrderStatistics" resultMap="listOrderStatisticsMap">
    这是一个XML文件中定义的一个SQL查询语句，它的ID是selectOrderStatistics，并且使用listOrderStatisticsMap作为结果映射（resultMap）。
    select date_format(from_unixtime(UNIX_TIMESTAMP(create_time)), "%Y-%m-%d") as days, count(*) as amount
    这一行是SQL查询语句的主体部分，它使用了MySQL中的函数，将create_time转换为日期格式%Y-%m-%d并命名为days，同时使用count(*)统计每个日期的订单数量，并命名为amount。
    from imooc_mall_order
    这表示从名为 imooc_mall_order 的表中进行数据查询。
    <where>
      标识接下来是一个查询条件的起始标记。
      <if test="query.startDate != null" >
      这表示如果传入的参数query.startDate不为空，则执行下面的条件语句。
      <![CDATA[and create_time >= #{query.startDate}]]>
      这是一个条件语句，如果query.startDate不为空，则会添加条件create_time >= #{query.startDate}。
      <if test="query.endDate != null" >
      这表示如果传入的参数query.endDate不为空，则执行下面的条件语句。
      <![CDATA[and create_time <= #{query.endDate}]]>
      这是另一个条件语句，如果query.endDate不为空，则会添加条件 create_time <= #{query.endDate}。
    </where>
    标识查询条件结束。
    group by days
    这表示根据 days 字段进行分组。
    order by days
    这表示按照 days 字段进行升序排序。
    整体上，这段代码是一个灵活的查询语句，根据传入的参数动态生成不同的查询条件，并对查询结果进行日期分组和排序。
  -->
  <select id="selectOrderStatistics" resultMap="listOrderStatisticsMap">
    select date_format(from_unixtime(UNIX_TIMESTAMP(create_time)), "%Y-%m-%d") as days, count(*) as amount
    from imooc_mall_order
    <where>
      <if test="query.startDate != null" >
        <![CDATA[and create_time >= #{query.startDate}]]>
      </if>
      <if test="query.endDate != null" >
        <![CDATA[and create_time <= #{query.endDate}]]>
      </if>
    </where>
    group by days
    order by days
  </select>
</mapper>