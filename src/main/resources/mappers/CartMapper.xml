<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.mall.model.dao.CartMapper">
  <resultMap id="BaseResultMap" type="com.imooc.mall.model.pojo.Cart">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="selected" jdbcType="INTEGER" property="selected" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, product_id, user_id, quantity, selected, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from imooc_mall_cart
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from imooc_mall_cart
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.imooc.mall.model.pojo.Cart">
    insert into imooc_mall_cart (id, product_id, user_id, 
      quantity, selected, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{quantity,jdbcType=INTEGER}, #{selected,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.imooc.mall.model.pojo.Cart">
    insert into imooc_mall_cart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="selected != null">
        selected,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="selected != null">
        #{selected,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.mall.model.pojo.Cart">
    update imooc_mall_cart
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="selected != null">
        selected = #{selected,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.mall.model.pojo.Cart">
    update imooc_mall_cart
    set product_id = #{productId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      selected = #{selected,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCartByUserIdAndProductId" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List"/>
    from imooc_mall_cart
    where user_id = #{userId}
    and product_id = #{productId}
  </select>
  <!--
    selectList：为该查询语句起了一个ID，便于在其他地方引用。
    resultType：指定了查询结果的类型为 com.imooc.mall.model.vo.CartVO，即将查询结果映射到 CartVO 类型的对象。
    parameterType：指定了查询语句的参数类型为 java.lang.Integer，即接受一个整数类型的参数作为用户ID。
    查询语句：通过使用 SELECT 语句从购物车表和商品表中获取所需的字段数据，并使用 LEFT JOIN 进行表连接操作。
      c.id as id：将购物车表的 id 字段映射到 CartVO 对象的 id 属性。
      p.id as productId：将商品表的 id 字段映射到 CartVO 对象的 productId 属性。
      c.user_id as userId：将购物车表的 user_id 字段映射到 CartVO 对象的 userId 属性。
      c.quantity as quantity：将购物车表的 quantity 字段映射到 CartVO 对象的 quantity 属性。
      c.selected as selected：将购物车表的 selected 字段映射到 CartVO 对象的 selected 属性。
      p.price as price：将商品表的 price 字段映射到 CartVO 对象的 price 属性。
      p.name as productName：将商品表的 name 字段映射到 CartVO 对象的 productName 属性。
      p.image as productImage：将商品表的 image 字段映射到 CartVO 对象的 productImage 属性。
    from imooc_mall_cart c：指定查询语句的主表为购物车表，并使用别名 c。
    left join imooc_mall_product p on p.id = c.product_id：通过左连接操作将商品表和购物车表关联起来，以便获取商品信息。使用别名 p 表示商品表，on p.id = c.product_id 表示两个表之间的关联条件。
    where c.user_id = #{userId}：添加查询条件，限定购物车表中的用户ID等于给定的参数值 userId。
    and p.status = 1：添加查询条件，限定商品表中的状态字段为1（表示可用）。
    数据库左连接（left join）是一种关联查询方式，它可以返回左表中所有的记录，而右表中与左表匹配的记录。如果右表中没有匹配的记录，则返回 NULL 值。
  -->
  <select id="selectList" resultType="com.imooc.mall.model.vo.CartVO"
          parameterType="java.lang.Integer">
    select
    c.id as id,
    p.id as productId,
    c.user_id as userId,
    c.quantity as quantity,
    c.selected as selected,
    p.price as price,
    p.name as productName,
    p.image as productImage
    from imooc_mall_cart c
    left join imooc_mall_product p on p.id = c.product_id
    where c.user_id = #{userId}
    and p.status = 1
  </select>
  <!-- 更新选中状态-->
  <update id="selectOrNot" parameterType="map">
    update imooc_mall_cart
    set selected = #{selected}
    where user_id = #{userId}
    <if test="productId != null">
      and product_id = #{productId}
    </if>
  </update>
</mapper>